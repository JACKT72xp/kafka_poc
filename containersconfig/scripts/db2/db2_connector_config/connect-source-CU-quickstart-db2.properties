# A simple example that copies all tables from a SQLite database. The first few settings are
# required for all connectors: a name, the connector class to run, and the maximum number of
# tasks to create:
name=test-source-CU-db2-jdbc-autoincrement
connector.class=io.confluent.connect.jdbc.JdbcSourceConnector
tasks.max=1
# The remaining configs are specific to the JDBC source connector. In this example, we connect to a
# mysql database of cfo database, use and auto-incrementing column called 'id' to
# detect new rows as they are added, and output to topics prefixed with 'test-sqlite-jdbc-transform-', e.g.
# a table called 'traspasos' will be written to the topic 'test-sqlite-jdbc-transform-traspasos'.

#connection.url=jdbc:db2://localhost:50000/cfo
#connection.url=jdbc:db2://localhost:50000/DB2INST1
connection.url=jdbc:db2://db2:50000/TESTDB

# connection.user=root
# connection.password=root

connection.user=db2inst1
connection.password=db2inst1-pwd
#dialect.name=MySqlDatabaseDialect
dialect.name=Db2DatabaseDialect

mode=timestamp+incrementing
incrementing.column.name=ID
timestamp.column.name=CHGMARKER
topic.prefix=test-db2-jdbc-
#topic.prefix=test-sqlite-jdbc-transform-
timestamp.delay.interval.ms=500
poll.interval.ms=1000
validate.non.null=false

decimal.format=NUMERIC

table.types=TABLE,VIEW

transforms=InsertKey, ExtractId
transforms.InsertKey.type=org.apache.kafka.connect.transforms.ValueToKey
transforms.InsertKey.fields=ID
transforms.ExtractId.type=org.apache.kafka.connect.transforms.ExtractField$Key
transforms.ExtractId.field=ID

# catalog.pattern=cfo
schema.pattern=DB2INST1
#table.types=TABLE 

#Quitar esto cuando funcione
# table.whitelist=DB2INST1.expedientes, DB2INST1.fondos, DB2INST1.ordenes, DB2INST1.retenciones
table.whitelist=DB2INST1.EXPEDIENTES, DB2INST1.FONDOS, DB2INST1.ORDENES, DB2INST1.RETENCIONES