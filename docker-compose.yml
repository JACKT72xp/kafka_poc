version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    platform: linux/amd64
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | timeout 2 bash -c 'cat > /dev/tcp/127.0.0.1/2181' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.3.2
    platform: linux/amd64
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - kafka-data:/bitnami/kafka

  connect:
    image: confluentinc/cp-kafka-connect:7.4.0
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: "connect-cluster"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-config"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/kafka/connect"
    volumes:
      - ./plugins:/kafka/connect

  db2:
    image: icr.io/db2_community/db2:latest
    container_name: db2
    privileged: true
    platform: linux/amd64
    ports:
      - "50000:50000"
    environment:
      LICENSE: accept
      DB2INST1_PASSWORD: db2inst1-pwd
      DB2INST1_USER: db2inst1
      DBNAME: TESTDB
    volumes:
      - db2-data:/database/data
      - ./scripts/db2:/db2-init:ro

  dbeaver:
    image: dbeaver/cloudbeaver:ea
    ports:
      - "8085:8978"
    environment:
      - VNC_PASSWORD=password
      - CB_USER=admin
      - CB_PASSWORD=password
      - CB_SERVER_PORT=8978
      - CB_SERVER_HOST=localhost
      - CB_SERVER_ADMIN_PASSWORD=password
    volumes:
      - ./cloudbeaver:/opt/cloudbeaver/workspace
    depends_on:
      - db2
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085"]
      interval: 30s
      timeout: 10s
      retries: 5

  db2-connector:
    image: debezium/connect:2.7.3.Final
    platform: linux/amd64
    depends_on:
      connect:
        condition: service_healthy
    ports:
      - "8084:8084"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-config"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      PLUGIN_PATH: /kafka/connectors
    volumes:
      - ./plugins:/kafka/connectors

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092

  oracle:
    image: gvenzl/oracle-xe:latest
    container_name: oracle
    platform: linux/amd64
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      ORACLE_PASSWORD: Oracle123
      APP_USER: appuser
      APP_USER_PASSWORD: appuser123
    volumes:
      - oracle-data:/opt/oracle/oradata
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1 FROM dual;' | sqlplus -S sys/Oracle123@localhost:1521/XEPDB1"]
      interval: 30s
      timeout: 10s
      retries: 5


volumes:
  kafka-data:
  db2-data:
  oracle-data:
