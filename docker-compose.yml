version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    platform: linux/arm64
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | timeout 2 bash -c 'cat > /dev/tcp/127.0.0.1/2181' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.3.2
    platform: linux/arm64
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

  connect:
    image: debezium/connect:2.7.3.Final
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-config"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      PLUGIN_PATH: /kafka/connectors
    volumes:
      - ./plugins:/kafka/connectors

  db2:
    image: icr.io/db2_community/db2:latest
    container_name: db2
    privileged: true
    ports:
      - "50000:50000"
    environment:
      LICENSE: accept
      DB2INST1_PASSWORD: password
      DBNAME: TESTDB
    volumes:
      - ./scripts/db2:/db2-init:ro
    command: ["bash", "-c", "su - db2inst1 -c 'db2start && db2 -tf /db2-init/db2-init.sql && tail -f /dev/null'"]
    healthcheck:
      test: ["CMD", "db2", "top", "-n", "1"]
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: >
      bash -c "
        /var/db2_setup/lib/setup_db2_instance.sh &&
        su - db2inst1 -c 'db2start' &&
        su - db2inst1 -c 'db2 -tf /db2-init/db2-init.sql' &&
        tail -f /dev/null
      "